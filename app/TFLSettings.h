// ==============================
// File:			TFLSettings
// Project:			Einstein
//
// Copyright 2003-2007 by Paul Guyot (pguyot@kallisys.net).
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program; if not, write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
// ==============================
// $Id$
// ==============================

// generated by Fast Light User Interface Designer (fluid) version 1.0108

#ifndef TFLSettings_h
#define TFLSettings_h
#include <FL/Fl.H>
class TFLApp;
#include <FL/Fl_Window.H>
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Slider.H>

class TFLSettings : public Fl_Window {
  void _TFLSettings();
public:
  TFLSettings(int X, int Y, int W, int H, const char *L = 0);
  TFLSettings(int W, int H, const char *L = 0);
  Fl_Menu_Button *RMB;
  static Fl_Menu_Item menu_RMB[];
private:
  void cb_Install_i(Fl_Menu_*, void*);
  static void cb_Install(Fl_Menu_*, void*);
  void cb_Backlight_i(Fl_Menu_*, void*);
  static void cb_Backlight(Fl_Menu_*, void*);
  void cb_Settings_i(Fl_Menu_*, void*);
  static void cb_Settings(Fl_Menu_*, void*);
  void cb_About_i(Fl_Menu_*, void*);
  static void cb_About(Fl_Menu_*, void*);
  void cb_Power_i(Fl_Menu_*, void*);
  static void cb_Power(Fl_Menu_*, void*);
public:
  Fl_Box *wROMPath;
  Fl_Button *wROMDownload;
private:
  void cb_wROMDownload_i(Fl_Button*, void*);
  static void cb_wROMDownload(Fl_Button*, void*);
public:
  Fl_Button *wROMPathChoose;
private:
  void cb_wROMPathChoose_i(Fl_Button*, void*);
  static void cb_wROMPathChoose(Fl_Button*, void*);
public:
  Fl_Choice *wMachineChoice;
private:
  void cb_wMachineChoice_i(Fl_Choice*, void*);
  static void cb_wMachineChoice(Fl_Choice*, void*);
  static Fl_Menu_Item menu_wMachineChoice[];
public:
  Fl_Box *wFlashPath;
  Fl_Button *wFlashPathChoose;
private:
  void cb_wFlashPathChoose_i(Fl_Button*, void*);
  static void cb_wFlashPathChoose(Fl_Button*, void*);
public:
  Fl_Input *wWidth;
  Fl_Input *wHeight;
  Fl_Check_Button *wFullScreen;
  Fl_Check_Button *wHideMouse;
  Fl_Check_Button *wUseMonitor;
  Fl_Box *wRAMSizeMB;
  Fl_Box *wRAMSizeKB;
  Fl_Box *wRAMSizeKBLabel;
  Fl_Slider *wRAMSize;
private:
  void cb_wRAMSize_i(Fl_Slider*, void*);
  static void cb_wRAMSize(Fl_Slider*, void*);
public:
  Fl_Check_Button *wDontShow;
  Fl_Button *wQuit;
private:
  void cb_wQuit_i(Fl_Button*, void*);
  static void cb_wQuit(Fl_Button*, void*);
public:
  Fl_Button *wStart;
private:
  void cb_wStart_i(Fl_Button*, void*);
  static void cb_wStart(Fl_Button*, void*);
public:
  Fl_Box *wRestartWarning;
  Fl_Button *wRevert;
private:
  void cb_wRevert_i(Fl_Button*, void*);
  static void cb_wRevert(Fl_Button*, void*);
public:
  Fl_Button *wSave;
private:
  void cb_wSave_i(Fl_Button*, void*);
  static void cb_wSave(Fl_Button*, void*);
public:
  char *ROMPath; 
  char *FlashPath; 
  int machine; 
  int screenWidth; 
  int screenHeight; 
  int hideMouse; 
  int useMonitor; 
  int fullScreen; 
  int RAMSize; 
  int dontShow; 
private:
  TFLApp *app; 
  char *appPath; 
public:
  void setApp(TFLApp *App, const char *AppPath);
  void loadPreferences();
  void savePreferences();
  void revertDialog();
  void applyDialog();
  void runningMode();
private:
  void updateRAMSizeLabel();
};
#include <FL/Fl_Double_Window.H>
extern void close_window_cb(Fl_Double_Window*, void*);
extern Fl_Double_Window *wAbout;
extern void close_window_cb(Fl_Button*, void*);
Fl_Double_Window* createAboutDialog();
extern Fl_Double_Window *wROMDownloadWindow;
extern Fl_Input *wDownloadIP3;
extern Fl_Input *wDownloadIP2;
extern Fl_Input *wDownloadIP1;
extern Fl_Input *wDownloadIP0;
extern Fl_Input *wDownloadPort;
extern Fl_Box *wDownloadPath;
extern Fl_Button *wDownloadChoose;
Fl_Double_Window* createROMDownloadDialog();
void startDump();
void dataReadCB(int p, void *user_data);
void dataExceptCB(int p, void *user_data);
extern Fl_Slider *wProgressSlider;
extern Fl_Button *wProgressCancel;
Fl_Double_Window* createROMDownloadProgressWindow();
#endif

// ======================================================== //
// Of course the code works. It just compiled, didn't it?   //
// --helixcode123, 11/8/2001 on slashdot.                   //
// ======================================================== //


