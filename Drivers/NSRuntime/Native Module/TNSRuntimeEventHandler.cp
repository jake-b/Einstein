// ==============================// File:			TNSRuntimeEventHandler.cp// Project:			Einstein//// Copyright 2003-2007 by Paul Guyot (pguyot@kallisys.net).//// This program is free software; you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation; either version 2 of the License, or// (at your option) any later version.//// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.//// You should have received a copy of the GNU General Public License along// with this program; if not, write to the Free Software Foundation, Inc.,// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.// ==============================// $Id$// ==============================#include "TNSRuntimeEventHandler.h"#include <NewtonScript.h>#include "K/Misc/RelocHack.h"#include "Headers/PlatformEvents.h"#include "TMainPlatformDriver.impl.h"// -------------------------------------------------------------------------- //// Constantes// -------------------------------------------------------------------------- //#define kBufferSize	(16 * 1024)// -------------------------------------------------------------------------- ////  * TNSRuntimeEventHandler( void )// -------------------------------------------------------------------------- //// The constructor is defined in TNSRuntimeEventHandlerGlue.a//TNSRuntimeEventHandler::TNSRuntimeEventHandler( void )//{//	// Hack hack hack.//	RelocVTable( &__VTABLE__22TNSRuntimeEventHandler );////	NewtonErr theErr = Init( kEventRuntimeWithSData, kEinsteinNSEventClass );//}// ------------------------------------------------------------------------	////  * AEHandlerProc( TUMsgToken*, ULong*, TAEvent* )// ------------------------------------------------------------------------	//voidTNSRuntimeEventHandler::AEHandlerProc(							TUMsgToken* token,							ULong* size,							TAEvent* inEvent ){	SEinsteinBufferEvent* theEvent = (SEinsteinBufferEvent*) inEvent;	switch ( theEvent->fDataClass )	{		case kNewtonScriptEvalData:			{				(void) ::NSCallGlobalFn(							Intern( "Einstein:EvaluateNS" ),							MAKEINT(theEvent->fBufferID),							MAKEINT(theEvent->fSize));			}			break;		case kPackageInstallData:			{				(void) ::NSCallGlobalFn(							Intern( "Einstein:InstallPackage" ),							MAKEINT(theEvent->fBufferID),							MAKEINT(theEvent->fSize));			}			break;				default:			TMainPlatformDriver::GetPlatformDriver()->Log("Unknown event data class");			break;	}}// ================================================= //// Within a computer, natural language is unnatural. //// ================================================= //